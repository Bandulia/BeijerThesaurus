<Window x:Class="Thesaurus.wpf.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        Title="Thesaurus" Height="520" Width="720"
        Background="{DynamicResource Color.Bg}"
        FontFamily="Segoe UI Variable, Segoe UI"
        TextElement.Foreground="{DynamicResource Color.Text}">

    <!-- ========= THEME & STYLES ========= -->
    <Window.Resources>
        <LinearGradientBrush x:Key="Color.Bg" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="#FFF7F7FF" Offset="0"/>
            <GradientStop Color="#FFF6FEFB" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="Color.Card"   Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="Color.Border" Color="#E5E7EB"/>
        <SolidColorBrush x:Key="Color.Text"   Color="#0B1220"/>
        <SolidColorBrush x:Key="Color.Subtle" Color="#6B7280"/>

        <SolidColorBrush x:Key="Color.Primary"        Color="#8B5CF6"/>
        <SolidColorBrush x:Key="Color.Primary.Hover"  Color="#7C3AED"/>
        <SolidColorBrush x:Key="Color.Accent"         Color="#14B8A6"/>
        <SolidColorBrush x:Key="Color.Highlight"      Color="#FB7185"/>
        <SolidColorBrush x:Key="Color.Item.Hover"     Color="#EEF2FF"/>
        <SolidColorBrush x:Key="Color.Item.Selected"  Color="#EDE9FE"/>

        <DropShadowEffect x:Key="SoftShadow" BlurRadius="14" ShadowDepth="0" Opacity="0.16"/>

        <!-- Text -->
        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="{DynamicResource Color.Text}"/>
            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
        </Style>

        <!-- Button -->
        <Style TargetType="Button">
            <Setter Property="Padding" Value="16,8"/>
            <Setter Property="Margin" Value="8,0,0,0"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="{DynamicResource Color.Primary}"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="Root" Background="{TemplateBinding Background}" CornerRadius="10">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Root" Property="Background" Value="{DynamicResource Color.Primary.Hover}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Root" Property="Opacity" Value="0.55"/>
                                <Setter Property="Cursor" Value="Arrow"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- TextBox -->
        <Style TargetType="TextBox">
            <Setter Property="Padding" Value="10,8"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="{DynamicResource Color.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="10">
                            <ScrollViewer x:Name="PART_ContentHost"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource Color.Primary}"/>
                                <Setter TargetName="Bd" Property="BorderThickness" Value="2"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Bd" Property="Opacity" Value="0.6"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="GroupBox">
            <Setter Property="Padding" Value="8"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GroupBox">
                        <Border Background="{DynamicResource Color.Card}" CornerRadius="14" BorderBrush="{DynamicResource Color.Border}" BorderThickness="1" Effect="{StaticResource SoftShadow}">
                            <DockPanel Margin="16">
                                <Border x:Name="HeaderHost"
                                        Background="{DynamicResource Color.Card}"
                                        BorderBrush="{DynamicResource Color.Border}"
                                        BorderThickness="1"
                                        CornerRadius="8"
                                        Padding="8,2"
                                        DockPanel.Dock="Top"
                                        Margin="0,0,0,8">
                                    <TextBlock Text="{TemplateBinding Header}"
                                               FontWeight="SemiBold"
                                               Foreground="{DynamicResource Color.Subtle}"/>
                                </Border>

                                <!-- Content -->
                                <ContentPresenter/>
                            </DockPanel>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="Header" Value="{x:Null}">
                                <Setter TargetName="HeaderHost" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="Header" Value="">
                                <Setter TargetName="HeaderHost" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ListBox -->
        <Style TargetType="ListBox">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{DynamicResource Color.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="6"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True"/>
            <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling"/>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="Padding" Value="10,6"/>
                        <Setter Property="Margin" Value="0,2"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                    <Border x:Name="ItemBg" CornerRadius="8" Background="{TemplateBinding Background}">
                                        <ContentPresenter Margin="{TemplateBinding Padding}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="ItemBg" Property="Background" Value="{DynamicResource Color.Item.Hover}"/>
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter TargetName="ItemBg" Property="Background" Value="{DynamicResource Color.Item.Selected}"/>
                                            <Setter Property="Foreground" Value="#5B21B6"/>
                                            <Setter Property="FontWeight" Value="SemiBold"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter TargetName="ItemBg" Property="Opacity" Value="0.6"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Separator -->
        <Style TargetType="Separator">
            <Setter Property="Margin" Value="0,8"/>
            <Setter Property="Background" Value="{DynamicResource Color.Border}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Separator">
                        <Border Background="{TemplateBinding Background}" Height="1" Opacity="0.85"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <!-- ========= /THEME & STYLES ========= -->

    <Grid Margin="16">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="8"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Add section -->
        <GroupBox Padding="8">
            <StackPanel>
                <StackPanel Orientation="Horizontal" Margin="0,0,0,6">
                    <TextBlock Text="Word:" Width="60" VerticalAlignment="Center" Foreground="{DynamicResource Color.Subtle}"/>
                    <TextBox Text="{Binding Word, UpdateSourceTrigger=PropertyChanged}" Width="180"/>
                </StackPanel>

                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Synonyms:" Width="60" VerticalAlignment="Center" Foreground="{DynamicResource Color.Subtle}"/>
                    <TextBox Text="{Binding SynonymsCsv, UpdateSourceTrigger=PropertyChanged}"
                             Width="420"
                             ToolTip="Separate the synonyms with commas"/>
                    <Button Content="Add" Command="{Binding AddCommand}"/>
                </StackPanel>
            </StackPanel>
        </GroupBox>

        <Separator Grid.Row="1"/>

        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="3*"/>
            </Grid.ColumnDefinitions>

            <!-- All words -->
            <GroupBox Header="All words" Padding="8" Grid.Column="0" Margin="0,0,8,0">
                <DockPanel>
                    <ListBox ItemsSource="{Binding AllWordsView}"
                             SelectedItem="{Binding SelectedWord, Mode=TwoWay}"/>
                </DockPanel>
            </GroupBox>

            <!-- Synonyms -->
            <GroupBox Header="Synonyms" Padding="8" Grid.Column="1">
                <DockPanel>
                    <ListBox ItemsSource="{Binding Synonyms}"
                             SelectedItem="{Binding SelectedSynonym, Mode=TwoWay}"/>
                </DockPanel>
            </GroupBox>
        </Grid>
    </Grid>
</Window>
